/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './route/__root'
import { Route as LoginImport } from './route/login'
import { Route as AppRouteImport } from './route/_app/route'
import { Route as AppIndexImport } from './route/_app/index'
import { Route as PortalCheckoutIdImport } from './route/portal/$checkoutId'
import { Route as AppTransactionsImport } from './route/_app/transactions'
import { Route as AppSupportImport } from './route/_app/support'
import { Route as AppAppearanceImport } from './route/_app/appearance'
import { Route as AppSettingsRouteImport } from './route/_app/settings/route'
import { Route as AppCheckoutsRouteImport } from './route/_app/checkouts/route'
import { Route as AppSettingsIndexImport } from './route/_app/settings/index'
import { Route as AppSettingsWebhookImport } from './route/_app/settings/webhook'
import { Route as AppSettingsApiImport } from './route/_app/settings/api'
import { Route as AppSettingsAccountImport } from './route/_app/settings/account'
import { Route as AppCheckoutsCheckoutIdImport } from './route/_app/checkouts/$checkoutId'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const PortalCheckoutIdRoute = PortalCheckoutIdImport.update({
  path: '/portal/$checkoutId',
  getParentRoute: () => rootRoute,
} as any)

const AppTransactionsRoute = AppTransactionsImport.update({
  path: '/transactions',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppSupportRoute = AppSupportImport.update({
  path: '/support',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppAppearanceRoute = AppAppearanceImport.update({
  path: '/appearance',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppSettingsRouteRoute = AppSettingsRouteImport.update({
  path: '/settings',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppCheckoutsRouteRoute = AppCheckoutsRouteImport.update({
  path: '/checkouts',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppSettingsIndexRoute = AppSettingsIndexImport.update({
  path: '/',
  getParentRoute: () => AppSettingsRouteRoute,
} as any)

const AppSettingsWebhookRoute = AppSettingsWebhookImport.update({
  path: '/webhook',
  getParentRoute: () => AppSettingsRouteRoute,
} as any)

const AppSettingsApiRoute = AppSettingsApiImport.update({
  path: '/api',
  getParentRoute: () => AppSettingsRouteRoute,
} as any)

const AppSettingsAccountRoute = AppSettingsAccountImport.update({
  path: '/account',
  getParentRoute: () => AppSettingsRouteRoute,
} as any)

const AppCheckoutsCheckoutIdRoute = AppCheckoutsCheckoutIdImport.update({
  path: '/$checkoutId',
  getParentRoute: () => AppCheckoutsRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_app/checkouts': {
      id: '/_app/checkouts'
      path: '/checkouts'
      fullPath: '/checkouts'
      preLoaderRoute: typeof AppCheckoutsRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/appearance': {
      id: '/_app/appearance'
      path: '/appearance'
      fullPath: '/appearance'
      preLoaderRoute: typeof AppAppearanceImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/support': {
      id: '/_app/support'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof AppSupportImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/transactions': {
      id: '/_app/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof AppTransactionsImport
      parentRoute: typeof AppRouteImport
    }
    '/portal/$checkoutId': {
      id: '/portal/$checkoutId'
      path: '/portal/$checkoutId'
      fullPath: '/portal/$checkoutId'
      preLoaderRoute: typeof PortalCheckoutIdImport
      parentRoute: typeof rootRoute
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/checkouts/$checkoutId': {
      id: '/_app/checkouts/$checkoutId'
      path: '/$checkoutId'
      fullPath: '/checkouts/$checkoutId'
      preLoaderRoute: typeof AppCheckoutsCheckoutIdImport
      parentRoute: typeof AppCheckoutsRouteImport
    }
    '/_app/settings/account': {
      id: '/_app/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AppSettingsAccountImport
      parentRoute: typeof AppSettingsRouteImport
    }
    '/_app/settings/api': {
      id: '/_app/settings/api'
      path: '/api'
      fullPath: '/settings/api'
      preLoaderRoute: typeof AppSettingsApiImport
      parentRoute: typeof AppSettingsRouteImport
    }
    '/_app/settings/webhook': {
      id: '/_app/settings/webhook'
      path: '/webhook'
      fullPath: '/settings/webhook'
      preLoaderRoute: typeof AppSettingsWebhookImport
      parentRoute: typeof AppSettingsRouteImport
    }
    '/_app/settings/': {
      id: '/_app/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AppSettingsIndexImport
      parentRoute: typeof AppSettingsRouteImport
    }
  }
}

// Create and export the route tree

interface AppCheckoutsRouteRouteChildren {
  AppCheckoutsCheckoutIdRoute: typeof AppCheckoutsCheckoutIdRoute
}

const AppCheckoutsRouteRouteChildren: AppCheckoutsRouteRouteChildren = {
  AppCheckoutsCheckoutIdRoute: AppCheckoutsCheckoutIdRoute,
}

const AppCheckoutsRouteRouteWithChildren =
  AppCheckoutsRouteRoute._addFileChildren(AppCheckoutsRouteRouteChildren)

interface AppSettingsRouteRouteChildren {
  AppSettingsAccountRoute: typeof AppSettingsAccountRoute
  AppSettingsApiRoute: typeof AppSettingsApiRoute
  AppSettingsWebhookRoute: typeof AppSettingsWebhookRoute
  AppSettingsIndexRoute: typeof AppSettingsIndexRoute
}

const AppSettingsRouteRouteChildren: AppSettingsRouteRouteChildren = {
  AppSettingsAccountRoute: AppSettingsAccountRoute,
  AppSettingsApiRoute: AppSettingsApiRoute,
  AppSettingsWebhookRoute: AppSettingsWebhookRoute,
  AppSettingsIndexRoute: AppSettingsIndexRoute,
}

const AppSettingsRouteRouteWithChildren =
  AppSettingsRouteRoute._addFileChildren(AppSettingsRouteRouteChildren)

interface AppRouteRouteChildren {
  AppCheckoutsRouteRoute: typeof AppCheckoutsRouteRouteWithChildren
  AppSettingsRouteRoute: typeof AppSettingsRouteRouteWithChildren
  AppAppearanceRoute: typeof AppAppearanceRoute
  AppSupportRoute: typeof AppSupportRoute
  AppTransactionsRoute: typeof AppTransactionsRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppCheckoutsRouteRoute: AppCheckoutsRouteRouteWithChildren,
  AppSettingsRouteRoute: AppSettingsRouteRouteWithChildren,
  AppAppearanceRoute: AppAppearanceRoute,
  AppSupportRoute: AppSupportRoute,
  AppTransactionsRoute: AppTransactionsRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

interface FileRoutesByFullPath {
  '': typeof AppRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/checkouts': typeof AppCheckoutsRouteRouteWithChildren
  '/settings': typeof AppSettingsRouteRouteWithChildren
  '/appearance': typeof AppAppearanceRoute
  '/support': typeof AppSupportRoute
  '/transactions': typeof AppTransactionsRoute
  '/portal/$checkoutId': typeof PortalCheckoutIdRoute
  '/': typeof AppIndexRoute
  '/checkouts/$checkoutId': typeof AppCheckoutsCheckoutIdRoute
  '/settings/account': typeof AppSettingsAccountRoute
  '/settings/api': typeof AppSettingsApiRoute
  '/settings/webhook': typeof AppSettingsWebhookRoute
  '/settings/': typeof AppSettingsIndexRoute
}

interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/checkouts': typeof AppCheckoutsRouteRouteWithChildren
  '/appearance': typeof AppAppearanceRoute
  '/support': typeof AppSupportRoute
  '/transactions': typeof AppTransactionsRoute
  '/portal/$checkoutId': typeof PortalCheckoutIdRoute
  '/': typeof AppIndexRoute
  '/checkouts/$checkoutId': typeof AppCheckoutsCheckoutIdRoute
  '/settings/account': typeof AppSettingsAccountRoute
  '/settings/api': typeof AppSettingsApiRoute
  '/settings/webhook': typeof AppSettingsWebhookRoute
  '/settings': typeof AppSettingsIndexRoute
}

interface FileRoutesById {
  '/_app': typeof AppRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/_app/checkouts': typeof AppCheckoutsRouteRouteWithChildren
  '/_app/settings': typeof AppSettingsRouteRouteWithChildren
  '/_app/appearance': typeof AppAppearanceRoute
  '/_app/support': typeof AppSupportRoute
  '/_app/transactions': typeof AppTransactionsRoute
  '/portal/$checkoutId': typeof PortalCheckoutIdRoute
  '/_app/': typeof AppIndexRoute
  '/_app/checkouts/$checkoutId': typeof AppCheckoutsCheckoutIdRoute
  '/_app/settings/account': typeof AppSettingsAccountRoute
  '/_app/settings/api': typeof AppSettingsApiRoute
  '/_app/settings/webhook': typeof AppSettingsWebhookRoute
  '/_app/settings/': typeof AppSettingsIndexRoute
}

interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/checkouts'
    | '/settings'
    | '/appearance'
    | '/support'
    | '/transactions'
    | '/portal/$checkoutId'
    | '/'
    | '/checkouts/$checkoutId'
    | '/settings/account'
    | '/settings/api'
    | '/settings/webhook'
    | '/settings/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/checkouts'
    | '/appearance'
    | '/support'
    | '/transactions'
    | '/portal/$checkoutId'
    | '/'
    | '/checkouts/$checkoutId'
    | '/settings/account'
    | '/settings/api'
    | '/settings/webhook'
    | '/settings'
  id:
    | '/_app'
    | '/login'
    | '/_app/checkouts'
    | '/_app/settings'
    | '/_app/appearance'
    | '/_app/support'
    | '/_app/transactions'
    | '/portal/$checkoutId'
    | '/_app/'
    | '/_app/checkouts/$checkoutId'
    | '/_app/settings/account'
    | '/_app/settings/api'
    | '/_app/settings/webhook'
    | '/_app/settings/'
  fileRoutesById: FileRoutesById
}

interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
  PortalCheckoutIdRoute: typeof PortalCheckoutIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  LoginRoute: LoginRoute,
  PortalCheckoutIdRoute: PortalCheckoutIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/login",
        "/portal/$checkoutId"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/checkouts",
        "/_app/settings",
        "/_app/appearance",
        "/_app/support",
        "/_app/transactions",
        "/_app/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_app/checkouts": {
      "filePath": "_app/checkouts/route.tsx",
      "parent": "/_app",
      "children": [
        "/_app/checkouts/$checkoutId"
      ]
    },
    "/_app/settings": {
      "filePath": "_app/settings/route.tsx",
      "parent": "/_app",
      "children": [
        "/_app/settings/account",
        "/_app/settings/api",
        "/_app/settings/webhook",
        "/_app/settings/"
      ]
    },
    "/_app/appearance": {
      "filePath": "_app/appearance.tsx",
      "parent": "/_app"
    },
    "/_app/support": {
      "filePath": "_app/support.tsx",
      "parent": "/_app"
    },
    "/_app/transactions": {
      "filePath": "_app/transactions.tsx",
      "parent": "/_app"
    },
    "/portal/$checkoutId": {
      "filePath": "portal/$checkoutId.tsx"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/checkouts/$checkoutId": {
      "filePath": "_app/checkouts/$checkoutId.tsx",
      "parent": "/_app/checkouts"
    },
    "/_app/settings/account": {
      "filePath": "_app/settings/account.tsx",
      "parent": "/_app/settings"
    },
    "/_app/settings/api": {
      "filePath": "_app/settings/api.tsx",
      "parent": "/_app/settings"
    },
    "/_app/settings/webhook": {
      "filePath": "_app/settings/webhook.tsx",
      "parent": "/_app/settings"
    },
    "/_app/settings/": {
      "filePath": "_app/settings/index.tsx",
      "parent": "/_app/settings"
    }
  }
}
ROUTE_MANIFEST_END */
